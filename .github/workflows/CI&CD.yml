name: Django CI

on:
  push:
    branches:
      - 'main'
      
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: my-github-action-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: my-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-codedeploy-deployment-group

jobs:
  build:

    runs-on: ubuntu-latest
    services:  # 서비스할 목록들 (ex. Redis, Postgresql ...)
      mysql:   # 사용할 서비스 명
        image: mysql:5.7  # 사용할 서비스의 이미지(도커 개념 기반)
        env:   # 사용할 서비스의 환경설정
          MYSQL_USER: admin
          MYSQL_PASSWORD: foodlethebest
          MYSQL_ROOT_PASSWORD: foodlethebest
          MYSQL_DATABASE: foodle
        ports: # 열어줄 포트, 8080:3306 형태로도 가능
          - 3306
        options: >-  # 서비스에 걸어줄 옵션
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10.7
      uses: actions/setup-python@v3
      with:
        python-version: 3.10.7
        
    # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .
    # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
